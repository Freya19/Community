<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.pyyf.community.dao.ITagMapper">

    <!--tag的映射结果集-->
    <resultMap type="site.pyyf.community.entity.Tag" id="TagMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="entityType" column="entity_type" jdbcType="INTEGER"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
    </resultMap>
    
    <!--全部字段-->
    <sql id="allColumn"> id, name, entity_type, count </sql>
    
    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="name != null and name != '' and name!='-1">
                name,
        </if>
        <if test="entityType != null">
                entity_type,
        </if>
        <if test="count != null">
                count,
        </if>
    </sql>
    
    <!--添加语句的值列表-->
        <sql id="insertValue">
        <if test="name != null and name != ''and name!='-1'">
                #{name},
        </if>
        <if test="entityType != null">
                #{entityType},
        </if>
        <if test="count != null">
                #{count},
        </if>
    </sql>
    
    <!--通用对Tag各个属性的值的非空判断-->
    <sql id="commonsValue">
        <if test="name != null and name != ''and name!='-1'">
                and name = #{name}
        </if>
        <if test="entityType != null">
                and entity_type = #{entityType}
        </if>
        <if test="count != null">
                and count = #{count}
        </if>
    </sql>
    
        <!--更新时通用对Tag各个属性的值的非空判断-->
    <sql id="updateValue">
        <if test="name != null and name != ''and name!='-1'">
                name = #{name},
        </if>
        <if test="entityType != null">
                entity_type = #{entityType},
        </if>
        <if test="count != null">
                count = #{count},
        </if>
    </sql>
    
    <!--传入tag时对Tag各个属性的值的非空判断-->
    <sql id="TagValue">
        <if test="tag.name != null and tag.name != ''and tag.name!='-1'">
                and name = #{tag.name}
        </if>
        <if test="tag.entityType != null">
                and entity_type = #{tag.entityType}
        </if>
        <if test="tag.count != null">
                and count = #{tag.count}
        </if>
    </sql>
    
    <!--新增tag:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>
   
    <!--删除tag:通过主键-->
    <delete id="deleteById">
        delete from tag
        <where>
            id = #{id}
        </where>
    </delete>
    
    <!--查询单个tag-->
    <select id="queryById" resultMap="TagMap">
        select
        <include refid="allColumn"></include>
        from tag
        <where>
            id = #{id}
        </where>
    </select>

    <!--通过实体作为筛选条件查询数据-->
    <select id="queryAll" resultMap="TagMap">
        select
          <include refid="allColumn"></include>
        from tag
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>
    
    <!--通过实体作为筛选条件查询数量-->
    <select id="queryCount" resultType="java.lang.Integer">
        select
          count(*)
        from tag
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>
    
    <!--通过实体作为筛选条件分页查询-->
    <select id="queryAllByLimit" resultMap="TagMap">
        select
          <include refid="allColumn"></include>
        from tag
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="TagValue"></include>
        </trim>
        limit #{offset}, #{limit}
    </select>

    <!--通过主键修改数据-->
    <update id="update">
        update tag
        <trim prefix="set" prefixOverrides="and" suffixOverrides=",">
            <include refid="updateValue"></include>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

</mapper>