<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.pyyf.community.dao.ICommentMapper">

    <!--comment的映射结果集-->
    <resultMap type="site.pyyf.community.entity.Comment" id="CommentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="entityType" column="entity_type" jdbcType="INTEGER"/>
        <result property="entityId" column="entity_id" jdbcType="INTEGER"/>
        <result property="targetId" column="target_id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <!--全部字段-->
    <sql id="allColumn"> id, user_id, entity_type, entity_id, target_id, content, status, create_time </sql>
    
    <!--添加语句的字段列表-->
    <sql id="insertColumn">
        <if test="userId != null">
                user_id,
        </if>
        <if test="entityType != null">
                entity_type,
        </if>
        <if test="entityId != null">
                entity_id,
        </if>
        <if test="targetId != null">
                target_id,
        </if>
        <if test="content != null and content != ''">
                content,
        </if>
        <if test="status != null">
                status,
        </if>
        <if test="createTime != null">
                create_time,
        </if>
    </sql>
    
    <!--添加语句的值列表-->
        <sql id="insertValue">
        <if test="userId != null">
                #{userId},
        </if>
        <if test="entityType != null">
                #{entityType},
        </if>
        <if test="entityId != null">
                #{entityId},
        </if>
        <if test="targetId != null">
                #{targetId},
        </if>
        <if test="content != null and content != ''">
                #{content},
        </if>
        <if test="status != null">
                #{status},
        </if>
        <if test="createTime != null">
                #{createTime},
        </if>
    </sql>
    
    <!--通用对Comment各个属性的值的非空判断-->
    <sql id="commonsValue">
        <if test="userId != null">
                and user_id = #{userId}
        </if>
        <if test="entityType != null">
                and entity_type = #{entityType}
        </if>
        <if test="entityId != null">
                and entity_id = #{entityId}
        </if>
        <if test="targetId != null">
                and target_id = #{targetId}
        </if>
        <if test="content != null and content != ''">
                and content = #{content}
        </if>
        <if test="status != null">
                and status = #{status}
        </if>
        <if test="createTime != null">
                and create_time = #{createTime}
        </if>
    </sql>
    
        <!--更新时通用对Comment各个属性的值的非空判断-->
    <sql id="updateValue">
        <if test="userId != null">
                user_id = #{userId},
        </if>
        <if test="entityType != null">
                entity_type = #{entityType},
        </if>
        <if test="entityId != null">
                entity_id = #{entityId},
        </if>
        <if test="targetId != null">
                target_id = #{targetId},
        </if>
        <if test="content != null and content != ''">
                content = #{content},
        </if>
        <if test="status != null">
                status = #{status},
        </if>
        <if test="createTime != null">
                create_time = #{createTime},
        </if>
    </sql>
    
    <!--传入comment时对Comment各个属性的值的非空判断-->
    <sql id="CommentValue">
        <if test="comment.userId != null">
                and user_id = #{comment.userId}
        </if>
        <if test="comment.entityType != null">
                and entity_type = #{comment.entityType}
        </if>
        <if test="comment.entityId != null">
                and entity_id = #{comment.entityId}
        </if>
        <if test="comment.targetId != null">
                and target_id = #{comment.targetId}
        </if>
        <if test="comment.content != null and comment.content != ''">
                and content = #{comment.content}
        </if>
        <if test="comment.status != null">
                and status = #{comment.status}
        </if>
        <if test="comment.createTime != null">
                and create_time = #{comment.createTime}
        </if>
    </sql>
    
    <!--新增comment:哪个字段不为空就添加哪列数据,返回自增主键-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="insertColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="insertValue"/>
        </trim>
    </insert>
   
    <!--删除comment:通过主键-->
    <delete id="deleteById">
        delete from comment
        <where>
            id = #{id}
        </where>
    </delete>
    
    <!--查询单个comment-->
    <select id="queryById" resultMap="CommentMap">
        select
        <include refid="allColumn"></include>
        from comment
        <where>
            id = #{id}
        </where>
    </select>

    <!--通过实体作为筛选条件查询数据-->
    <select id="queryAll" resultMap="CommentMap">
        select
          <include refid="allColumn"></include>
        from comment
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>
    
    <!--通过实体作为筛选条件查询数量-->
    <select id="queryCount" resultType="java.lang.Integer">
        select
          count(*)
        from comment
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="commonsValue"></include>
        </trim>
    </select>
    
    <!--通过实体作为筛选条件分页查询-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select
          <include refid="allColumn"></include>
        from comment
        <trim prefix="where" prefixOverrides="and" suffixOverrides=",">
            <include refid="CommentValue"></include>
        </trim>
        limit #{offset}, #{limit}
    </select>

    <!--通过主键修改数据-->
    <update id="update">
        update comment
        <trim prefix="set" prefixOverrides="and" suffixOverrides=",">
            <include refid="updateValue"></include>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

</mapper>